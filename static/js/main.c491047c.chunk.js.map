{"version":3,"sources":["ListComp.js","Filter.js","map-style.js","MapComp.js","mapApp.js","App.js","serviceWorker.js","index.js"],"names":["List","_this","this","react_default","a","createElement","className","role","onClick","props","selectItem","places","map","cafe","selection","toString","foursquareID","key","id","aria-label","concat","name","type","streetAddressString","formatted_address","cityStateZip","addressString","slice","indexOf","Component","Filter","placeholder","onChange","e","query","target","value","monochromeMapStyle","featureType","elementType","stylers","color","gamma","lightness","saturation","weight","visibility","hue","Map","state","boundary","markers","infoWindow","currentVenue","initMap","window","google","maps","document","getElementById","center","lat","lng","zoom","styles","disableDefaultUI","setState","createMarkers","fitBounds","bounds","LatLngBounds","mkrs","mark","index","marker","Marker","position","geometry","location","callback","addListener","event","getAnimation","setAnimation","extend","infoWin","InfoWindow","populateInfoWindow","fourSqAPIcall","then","resp","setContent","createInfoWinContent","open","setMarker","script","src","async","defer","getElementsByTagName","parentNode","insertBefore","initGoogleAPI","prevProps","_this2","forEach","Animation","BOUNCE","showingListings","showing","place","includes","setMap","close","foursqData","foursqPhotoInfo","markerIndex","googleInfo","DataAvailable","meta","code","urlSuffix","response","photos","items","suffix","urlPrefix","prefix","photoURL","content","venue","hours","status","rating","canonicalUrl","MapApp","listings","filteredResults","selectedItemID","error","filter","results","toLowerCase","getFourSq","markerID","authentication","requests","fetch","venueReponse","json","photoResponse","Promise","all","apiCallWorked","catch","src_Filter","ListComp","arg","MapComp","foursqPhoto","getPhoto","myPlaces","data","gm_authFailure","alert","eventObject","tagName","bool","err","console","log","App","HashRouter","mapApp","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","src_App_0","URL","process","origin","addEventListener","headers","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"y9WAoCeA,yLAhCJ,IAAAC,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIE,KAAK,OAAOC,QAASN,KAAKO,MAAMC,YACjCR,KAAKO,MAAME,QAAUT,KAAKO,MAAME,OAAOC,IAAI,SAAAC,GAE1C,OAAIZ,EAAKQ,MAAMK,WAAab,EAAKQ,MAAMK,UAAUC,aAAeF,EAAKG,aAC3Db,EAAAC,EAAAC,cAAA,OAAKY,IAAKJ,EAAKK,GAAIZ,UAAU,uBACnCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBW,IAAKJ,EAAKK,IAAKf,EAAAC,EAAAC,cAAA,UAAQc,aAAA,UAAAC,OAAsBP,EAAKQ,MAAQH,GAAIL,EAAKG,aAAcV,UAAU,kBAAkBgB,KAAK,UAAUT,EAAKQ,OAChKlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBL,EAAKsB,oBAAoBV,EAAKW,mBAAmBrB,EAAAC,EAAAC,cAAA,WAAOJ,EAAKwB,aAAaZ,EAAKW,sBAKzGrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAiBW,IAAKJ,EAAKK,IAAKf,EAAAC,EAAAC,cAAA,UAAQc,aAAA,UAAAC,OAAsBP,EAAKQ,MAAQH,GAAIL,EAAKG,aAAcV,UAAU,kBAAkBgB,KAAK,UAAUT,EAAKQ,uDAQ/JK,GAClB,OAAOA,EAAcC,MAAM,EAAGD,EAAcE,QAAQ,2CAGzCF,GACX,OAAOA,EAAcC,MAAMD,EAAcE,QAAQ,KAAO,UA7BzCC,cCWJC,mLAVJ,IAAA7B,EAAAC,KACP,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,SAAOc,aAAW,SAASD,GAAG,eAAeI,KAAK,OAAOS,YAAY,8BACnEC,SAAU,SAAAC,GAAC,OAAIhC,EAAKQ,MAAMyB,MAAMD,EAAEE,OAAOC,kBAL9BP,qBC6UNQ,EA/UY,CACvB,CACIC,YAAe,MACfC,YAAe,WACfC,QAAW,CACP,CACIC,MAAS,aAIrB,CACIH,YAAe,MACfC,YAAe,mBACfC,QAAW,CACP,CACIE,MAAS,KAEb,CACIC,UAAa,MAIzB,CACIL,YAAe,MACfC,YAAe,qBACfC,QAAW,CACP,CACII,YAAe,IAEnB,CACID,WAAc,IAElB,CACIE,OAAU,GAEd,CACIH,MAAS,MAIrB,CACIJ,YAAe,MACfC,YAAe,cACfC,QAAW,CACP,CACIM,WAAc,SAI1B,CACIR,YAAe,0BACfC,YAAe,mBACfC,QAAW,CACP,CACIC,MAAS,aAIrB,CACIH,YAAe,0BACfC,YAAe,qBACfC,QAAW,CACP,CACIC,MAAS,WAEb,CACII,OAAU,UAItB,CACIP,YAAe,8BACfC,YAAe,mBACfC,QAAW,CACP,CACIC,MAAS,WAEb,CACIK,WAAc,SAI1B,CACIR,YAAe,8BACfC,YAAe,qBACfC,QAAW,CACP,CACIC,MAAS,WAEb,CACII,OAAU,QAEd,CACIC,WAAc,SAI1B,CACIR,YAAe,YACfC,YAAe,WACfC,QAAW,CACP,CACIG,UAAa,IAEjB,CACIC,WAAc,MAI1B,CACIN,YAAe,MACfC,YAAe,WACfC,QAAW,CACP,CACII,WAAc,MAI1B,CACIN,YAAe,iBACfC,YAAe,cACfC,QAAW,CACP,CACIM,WAAc,SAI1B,CACIR,YAAe,WACfC,YAAe,WACfC,QAAW,CACP,CACIG,UAAa,IAEjB,CACIC,YAAe,MAI3B,CACIN,YAAe,OACfC,YAAe,WACfC,QAAW,CACP,CACIG,UAAa,IAEjB,CACIC,YAAe,MAI3B,CACIN,YAAe,OACfC,YAAe,kBACfC,QAAW,CACP,CACII,WAAc,IAElB,CACID,UAAa,MAIzB,CACIL,YAAe,eACfC,YAAe,gBACfC,QAAW,CACP,CACIM,WAAc,MAElB,CACIL,MAAS,aAIrB,CACIH,YAAe,eACfC,YAAe,kBACfC,QAAW,CACP,CACIC,MAAS,aAIrB,CACIH,YAAe,eACfC,YAAe,mBACfC,QAAW,CACP,CACIM,WAAc,MAElB,CACIL,MAAS,aAIrB,CACIH,YAAe,eACfC,YAAe,qBACfC,QAAW,CACP,CACIM,WAAc,MAElB,CACIL,MAAS,aAIrB,CACIH,YAAe,eACfC,YAAe,cACfC,QAAW,CACP,CACIM,WAAc,c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","file":"static/js/main.c491047c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass List extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list\" >\r\n        <ul role=\"list\" onClick={this.props.selectItem}>\r\n          {this.props.places && this.props.places.map(cafe => {\r\n\r\n            if (this.props.selection && this.props.selection.toString() === cafe.foursquareID) {\r\n              return (<div key={cafe.id} className=\"selectedCafe chosen\">\r\n                <li className=\"cafe-list-item\" key={cafe.id} ><button aria-label={`Select ${cafe.name}`} id={cafe.foursquareID} className=\"cafe-select-btn\" type=\"button\">{cafe.name}</button></li>\r\n                <div className=\"listInfo\">\r\n                  <p className=\"address-line\">{this.streetAddressString(cafe.formatted_address)}<br />{this.cityStateZip(cafe.formatted_address)}</p>\r\n                </div>\r\n              </div>)\r\n\r\n            } else {\r\n              return <li className=\"cafe-list-item\" key={cafe.id} ><button aria-label={`Select ${cafe.name}`} id={cafe.foursquareID} className=\"cafe-select-btn\" type=\"button\">{cafe.name}</button></li>\r\n            }\r\n          })}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  streetAddressString(addressString) {\r\n    return addressString.slice(0, addressString.indexOf(','))\r\n  }\r\n\r\n  cityStateZip(addressString) {\r\n    return addressString.slice(addressString.indexOf(',') + 1)\r\n  }\r\n}\r\n\r\nexport default List","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"filter\" >\r\n        <input aria-label=\"Filter\" id=\"filter-query\" type=\"text\" placeholder=\"Filter Coffee Shops by Name\"\r\n          onChange={e => this.props.query(e.target.value)}></input>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Filter","\r\nconst monochromeMapStyle = [\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"gamma\": 0.01\r\n            },\r\n            {\r\n                \"lightness\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -31\r\n            },\r\n            {\r\n                \"lightness\": -33\r\n            },\r\n            {\r\n                \"weight\": 2\r\n            },\r\n            {\r\n                \"gamma\": 0.8\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"all\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.locality\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#050505\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.locality\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#fef3f3\"\r\n            },\r\n            {\r\n                \"weight\": \"3.01\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.neighborhood\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#0a0a0a\"\r\n            },\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"administrative.neighborhood\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#fffbfb\"\r\n            },\r\n            {\r\n                \"weight\": \"3.01\"\r\n            },\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 30\r\n            },\r\n            {\r\n                \"saturation\": 30\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": 20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.attraction\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi.park\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 20\r\n            },\r\n            {\r\n                \"saturation\": -20\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": 10\r\n            },\r\n            {\r\n                \"saturation\": -30\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": 25\r\n            },\r\n            {\r\n                \"lightness\": 25\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#a1a1a1\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#292929\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#202020\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            },\r\n            {\r\n                \"hue\": \"#0006ff\"\r\n            },\r\n            {\r\n                \"saturation\": \"-100\"\r\n            },\r\n            {\r\n                \"lightness\": \"13\"\r\n            },\r\n            {\r\n                \"gamma\": \"0.00\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#686868\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            },\r\n            {\r\n                \"color\": \"#8d8d8d\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#353535\"\r\n            },\r\n            {\r\n                \"lightness\": \"6\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#ffffff\"\r\n            },\r\n            {\r\n                \"weight\": \"3.45\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#d0d0d0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"geometry.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": \"2\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            },\r\n            {\r\n                \"color\": \"#999898\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#383838\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text.stroke\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#faf8f8\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": -20\r\n            }\r\n        ]\r\n    }\r\n]\r\nexport default monochromeMapStyle;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport monochromeMapStyle from './map-style.js'\r\n\r\nclass Map extends Component {\r\n    state = {\r\n        map: null,\r\n        boundary: null,\r\n        markers: null,\r\n        infoWindow: null,\r\n        currentVenue: null\r\n    }\r\n\r\n    render() {\r\n        return <div id=\"map\" role=\"application\"></div>\r\n    }\r\n\r\n    componentWillMount() {\r\n        // push initMap to a global (so it can be used as a callback by google's API <script>)\r\n        window.initMap = this.initMap;\r\n        // init google API - appends script to page\r\n        initGoogleAPI();\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps) {\r\n\r\n        // If selection made via the list component, open Info Window & animate marker\r\n        this.props.selection && this.state.markers.forEach(marker => {\r\n            if (marker.foursquareID === this.props.selection) {\r\n                this.populateInfoWindow(marker);\r\n                marker.setAnimation(window.google.maps.Animation.BOUNCE)\r\n            } else {\r\n                marker.getAnimation() !== null && marker.setAnimation(null);\r\n            }\r\n        })\r\n\r\n        /**\r\n         * FILTER MARKERS\r\n         */\r\n        if (prevProps.showingListings !== this.props.showingListings) {\r\n            this.setState(state => {\r\n                let showing = this.props.showingListings.map(place => place.id);\r\n                this.state.markers.forEach(marker => {\r\n                    if (showing.includes(marker.id)) {\r\n                        marker.setMap(this.state.map);\r\n                    }\r\n                    else {\r\n                        marker.setMap(null);\r\n                    }\r\n                })\r\n                // Close infoWindow if selection set to null (i.e. new filtering action)\r\n                if (this.props.selection === null && this.state.infoWindow.marker) {\r\n                    state.infoWindow.close();\r\n                };\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * GOOGLE MAP CREATION\r\n     *  - this function is pushed to global/window scope so Google script can access it\r\n     */\r\n    initMap = () => {\r\n        const map = new window.google.maps.Map(document.getElementById('map'), {\r\n            center: { lat: 39.685585, lng: -104.98727 },\r\n            zoom: 13,\r\n            styles: monochromeMapStyle,\r\n            disableDefaultUI: true\r\n        });\r\n\r\n        this.setState({ map });\r\n        this.createMarkers(this.state.map);\r\n        this.state.map.fitBounds(this.state.boundary);\r\n    }\r\n\r\n    /**\r\n     * INITIALIZE MARKERS & INFOWINDOW\r\n     * - called once in componentWillMount\r\n     */\r\n    createMarkers = (map) => {\r\n        let bounds = new window.google.maps.LatLngBounds();\r\n        let mkrs = this.props.places.map((mark, index) => {\r\n            let marker = new window.google.maps.Marker({\r\n                map: map,\r\n                position: mark.geometry.location,\r\n                id: mark.id,\r\n                foursquareID: mark.foursquareID,\r\n                index: index,\r\n            });\r\n\r\n            const callback = this.props.selectItem;\r\n\r\n            marker.addListener('click', function (event) {\r\n                callback(this);\r\n                // toggle bounce animation\r\n                if (marker.getAnimation !== null) {\r\n                    marker.setAnimation(null)\r\n                }\r\n            });\r\n            bounds.extend(marker.position);\r\n            return marker;\r\n        })\r\n\r\n        // Also create an info window\r\n        const infoWin = new window.google.maps.InfoWindow();\r\n\r\n        this.setState({ markers: mkrs, infoWindow: infoWin, boundary: bounds });\r\n    }\r\n\r\n\r\n    /**\r\n     * POPULATE INFOWINDOW ON GIVEN MARKER\r\n     * - Called when selection is made (marker or list item clicked)\r\n     */\r\n    populateInfoWindow = (marker) => {\r\n        //marker.id is the index of the cafe object in state.filteredResults\r\n        if (this.state.infoWindow.marker !== marker) {\r\n            // Populate infoWin with info from Foursquare\r\n            this.props.fourSqAPIcall(marker.index)\r\n                .then(resp => {\r\n                    // console.log(\"RESPONSES\",resp); //TODO REmove this console.log\r\n                    this.setState(state => {\r\n                        state.infoWindow.marker = marker;\r\n                        state.infoWindow.setContent(this.createInfoWinContent(resp[0], resp[1], marker.index));\r\n                        state.infoWindow.open(state.map, marker);\r\n                        state.infoWindow.addListener('closeClick', () => {\r\n                            state.infoWindow.setMarker(null);\r\n                        });\r\n                        state.currentVenue = resp; // TODO use or remove\r\n                    })\r\n                })\r\n\r\n\r\n            // Send selection id up to parent\r\n            if (marker.foursquareID !== this.props.selection) {\r\n                this.props.selectItem(marker.foursquareID);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Helper Function - Create HTML for infowindow\r\n     *  - if I had more time, I'd try to refactor this into it's own component\r\n     */\r\n    createInfoWinContent(foursqData, foursqPhotoInfo, markerIndex) {\r\n        let googleInfo = this.props.places[markerIndex]\r\n\r\n        let DataAvailable = (foursqData.meta) && (foursqData.meta.code === 200) && (foursqPhotoInfo.meta.code === 200) ? true : false;\r\n        let urlSuffix = (DataAvailable && foursqPhotoInfo.response.photos.items[0] && foursqPhotoInfo.response.photos.items[0].suffix) ? foursqPhotoInfo.response.photos.items[0].suffix : null;\r\n        let urlPrefix = (DataAvailable && foursqPhotoInfo.response.photos.items[0] && foursqPhotoInfo.response.photos.items[0].prefix) ? foursqPhotoInfo.response.photos.items[0].prefix : null;\r\n        let photoURL = (urlPrefix && urlSuffix) ? urlPrefix + '100x100' + urlSuffix : null;\r\n\r\n        let content = '<h3 class=\"info-window-title\">' + googleInfo.name + '</h3>';\r\n\r\n        content += (DataAvailable && foursqData.response.venue.hours) ? '<p class=\"open-status\">' + foursqData.response.venue.hours.status + '</p>' : '';\r\n        content += photoURL ? '<img alt=\"Recent photo taken from ' + googleInfo.name + '\" class=\"info-window-image\" src=\"' + photoURL + '\">' : '<div class=\"no-info-window-photo\">Photo Not Available</div>';\r\n        content += '<h4 class=\"ratings-header\">Ratings:</h4>'\r\n        content += googleInfo.rating ? '<p class=\"google-rating\">Google: ' + googleInfo.rating.toString() + '</p>' : \"\";\r\n        content += (DataAvailable && foursqData.response.venue.rating) ? '<p class=\"foursquare-rating\">FourSquare: ' + foursqData.response.venue.rating.toString() + '</p>' : \"\";\r\n        content += (DataAvailable) ? '<a class=\"foursquare-attribution\" href=\"' + foursqData.response.venue.canonicalUrl +\r\n            '?ref=RGZFKSSZOTBZKW0JHI0DEHD34LIHGBICEWFHRH3TBGZZ4QFY\" target=\"_blank\" rel=\"noopener\">POWERED BY FOURSQUARE</a>' : \"\";\r\n\r\n        return content\r\n    }\r\n\r\n}\r\n\r\n// This is needed to fix to the HTML page, outside of React\r\n// - bit of a hack, but I used this instead of an external library\r\nfunction initGoogleAPI() {\r\n    // create script to fetch google API\r\n    const script = window.document.createElement('script');\r\n    script.src = \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAFsdADbayWDjmwhIHX6nI9uY8qKZ-bPW4&v=3&callback=initMap&libraries=places\";\r\n    script.async = true;\r\n    script.defer = true;\r\n\r\n    // fix that script to the top of the html doc\r\n    const index = window.document.getElementsByTagName('script')[0];\r\n    index.parentNode.insertBefore(script, index);\r\n}\r\n\r\n\r\nexport default Map","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport List from './ListComp.js';\r\nimport Filter from './Filter.js';\r\nimport * as data from './locations.json';\r\nimport Map from './MapComp.js';\r\n\r\nclass MapApp extends Component {\r\n\r\n  state = {\r\n    listings: [],\r\n    filteredResults: [],\r\n    selectedItemID: null,\r\n    error: false\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main role=\"main\" id=\"app-container\">\r\n        <div id=\"list-filter\">\r\n          <h1>Denver Cafe Map</h1>\r\n          {/* Filter component */}\r\n          <Filter query={this.filter} />\r\n\r\n          {/* List component */}\r\n          <List places={this.state.filteredResults} selectItem={(arg) => this.selectItem(arg)}\r\n            selection={this.state.selectedItemID} />\r\n        </div>\r\n\r\n        {/* Map Component - Info Windows display Foursquare API info */}\r\n        <Map role='application' aria-label='map' places={this.state.listings} fourSqAPIcall={this.getFourSq} selectItem={(arg) => this.selectItem(arg)}\r\n          selection={this.state.selectedItemID} showingListings={this.state.filteredResults} foursqPhoto={this.getPhoto}\r\n          error={this.apiCallWorked} />\r\n        <div className={\"error-message \" + (this.state.error ? \"showing\":\"hidden\" )}>Problem loading information:<br /><span className=\"err-subtext\">Some information was not gathered from the API</span></div>\r\n      </main>\r\n    );\r\n\r\n  }\r\n\r\n\r\n  componentWillMount() {\r\n    // initGoogleAPI();\r\n    const myPlaces = data.default;\r\n    // Load info from JSON file (hard-coded info on coffee shops in Denver)\r\n    this.setState({ listings: myPlaces, filteredResults: myPlaces });\r\n\r\n    window.gm_authFailure= () => {\r\n      window.alert(\"Google Maps Auth Failure\")\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * GET SELECTED ITEM FROM CLICK\r\n   * - Marker or list items are clicked on\r\n   * - List items can be selected with keyboard (Tab through + Enter to select)\r\n   */\r\n  selectItem(eventObject) {\r\n    if (typeof eventObject === \"object\" && eventObject.target && eventObject.target.tagName === \"BUTTON\") {\r\n      this.setState({ selectedItemID: eventObject.target.id })\r\n    } else if (typeof eventObject === \"string\") {\r\n      this.setState({ selectedItemID: eventObject });\r\n    } else if (eventObject.foursquareID) {\r\n      // console.log('Selection attempt: ',eventObject);\r\n      this.setState({ selectedItemID: eventObject.foursquareID })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * FILTER FUNCTIONALITY\r\n   * - Changes state of Parent/App component with input from Filter component\r\n   *   child components update themselves\r\n   */\r\n  filter = (query) => {\r\n    if (!query) this.setState({ filteredResults: this.state.listings });\r\n\r\n    let results = this.state.listings.filter((cafe, index) => {\r\n      return cafe.name.toLowerCase().includes(query.toLowerCase());\r\n    })\r\n    this.setState({ filteredResults: results, selectedItemID: null })\r\n  }\r\n\r\n\r\n  /**\r\n   * FOURSQUARE API CALL\r\n   *  - returns a Promise.all array of 2 Json items\r\n   */\r\n  getFourSq = (markerID) => {\r\n    // Set varialbes to create url for Foursquare API requests\r\n    let id = this.state.listings[markerID].foursquareID;\r\n    let url = 'https://api.foursquare.com/v2/venues/';\r\n    let authentication = 'client_id=RGZFKSSZOTBZKW0JHI0DEHD34LIHGBICEWFHRH3TBGZZ4QFY' +\r\n      '&client_secret=H5N1I1ECCDDGALKI5GZU1XQGYKKJJHWGAUEYG5FYZFEFTIQT' +\r\n      '&v=20181020';\r\n\r\n    // create 2 promises - first for venue information\r\n    let getFourData = fetch(`${url}${id}?${authentication}`).then(venueReponse => venueReponse.json());\r\n    // second for photo information\r\n    let getFourPhoto = fetch(`https://api.foursquare.com/v2/venues/${id}/photos?group=venue&size=50x50&limit=2` +\r\n      `&${authentication}`).then(photoResponse => photoResponse.json())\r\n\r\n    // Use Promise.all to submit fetch requests asynchronously\r\n    let requests = [getFourData, getFourPhoto];\r\n    return Promise.all(requests)\r\n    .then(resp => {\r\n      this.apiCallWorked(true)\r\n      return resp\r\n    })\r\n    .catch(error => {\r\n      this.apiCallWorked(false, error)\r\n      return [ \"\",\"\" ]\r\n    })\r\n\r\n  }\r\n\r\n  apiCallWorked(bool, err) {\r\n    if(bool) {\r\n      // Error not caught, so clear if needed\r\n      this.setState({error: false})\r\n    }\r\n    else {\r\n      // Error Caught\r\n      this.setState({error: true})\r\n      console.log(err)\r\n    }\r\n  }\r\n}\r\n\r\nexport default MapApp;","import React, { Component } from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport MapApp from './mapApp.js';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <HashRouter>\r\n                <MapApp />\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}